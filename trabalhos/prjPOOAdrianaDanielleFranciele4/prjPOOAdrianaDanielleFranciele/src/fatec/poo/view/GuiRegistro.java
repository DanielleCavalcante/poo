/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package fatec.poo.view;

import fatec.poo.control.Conexao;
import fatec.poo.control.DaoHospede;
import fatec.poo.control.DaoQuarto;
import fatec.poo.control.DaoRecepcionista;
import fatec.poo.control.DaoRegistro;
import fatec.poo.model.Hospede;
import fatec.poo.model.Quarto;
import fatec.poo.model.Recepcionista;
import fatec.poo.model.Registro;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author Adriana, Danielle e Franciele
 */
public class GuiRegistro extends javax.swing.JFrame {

    /** Creates new form GuiRegistro */
    public GuiRegistro() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDataEntrada = new javax.swing.JFormattedTextField();
        txtDataSaida = new javax.swing.JFormattedTextField();
        txtCodigo = new javax.swing.JTextField();
        txtRegistroFuncional = new javax.swing.JTextField();
        txtNQuarto = new javax.swing.JTextField();
        txtValorHospedagem = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        lblRegistroFuncional = new javax.swing.JLabel();
        lblCPFHospede = new javax.swing.JLabel();
        lblNQuarto = new javax.swing.JLabel();
        lblDataEntrada = new javax.swing.JLabel();
        lblDataSaida = new javax.swing.JLabel();
        lblValorHospedagem = new javax.swing.JLabel();
        txtBuscaRegistroFuncional = new javax.swing.JTextField();
        txtBuscaCPFHospede = new javax.swing.JTextField();
        txtSituacao = new javax.swing.JTextField();
        lblSituacao = new javax.swing.JLabel();
        btnBuscaRegistroFuncional = new javax.swing.JButton();
        btnBuscaCPFHospede = new javax.swing.JButton();
        btnBuscaSituacao = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnReservar = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        txtCPFHospede = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        try {
            txtDataEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataEntrada.setEnabled(false);

        try {
            txtDataSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataSaida.setEnabled(false);

        txtRegistroFuncional.setEnabled(false);

        txtNQuarto.setEnabled(false);

        txtValorHospedagem.setEnabled(false);

        lblCodigo.setText("Código");

        lblRegistroFuncional.setText("Registro Funcional");

        lblCPFHospede.setText("CPF Hóspede");

        lblNQuarto.setText("N°. Quarto");

        lblDataEntrada.setText("Data entrada");

        lblDataSaida.setText("Data saída");

        lblValorHospedagem.setText("Valor Hospedagem");

        txtBuscaRegistroFuncional.setEnabled(false);

        txtBuscaCPFHospede.setEnabled(false);

        txtSituacao.setEnabled(false);

        lblSituacao.setText("Situação");
        lblSituacao.setEnabled(false);

        btnBuscaRegistroFuncional.setText("...");
        btnBuscaRegistroFuncional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaRegistroFuncionalActionPerformed(evt);
            }
        });

        btnBuscaCPFHospede.setText("...");
        btnBuscaCPFHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaCPFHospedeActionPerformed(evt);
            }
        });

        btnBuscaSituacao.setText("...");
        btnBuscaSituacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaSituacaoActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/exit.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/pesq.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnReservar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/save.png"))); // NOI18N
        btnReservar.setText("Reservar");
        btnReservar.setEnabled(false);
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnLiberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/rem.png"))); // NOI18N
        btnLiberar.setText("Liberar");
        btnLiberar.setEnabled(false);
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        try {
            txtCPFHospede.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPFHospede.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConsultar)
                                .addGap(35, 35, 35)
                                .addComponent(btnReservar)
                                .addGap(18, 18, 18)
                                .addComponent(btnLiberar)
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRegistroFuncional)
                                    .addComponent(lblCPFHospede)
                                    .addComponent(lblDataSaida)
                                    .addComponent(lblNQuarto)
                                    .addComponent(lblValorHospedagem))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCPFHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                                        .addComponent(btnBuscaSituacao)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRegistroFuncional, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtValorHospedagem, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(18, 18, 18)
                        .addComponent(btnSair)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCodigo)
                            .addComponent(lblDataEntrada))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSituacao)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscaRegistroFuncional)
                                    .addComponent(btnBuscaCPFHospede))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBuscaRegistroFuncional)
                                    .addComponent(txtBuscaCPFHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodigo)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegistroFuncional)
                            .addComponent(txtRegistroFuncional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscaRegistroFuncional)
                            .addComponent(txtBuscaRegistroFuncional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCPFHospede)
                            .addComponent(txtCPFHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscaCPFHospede)
                            .addComponent(txtBuscaCPFHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNQuarto)
                            .addComponent(txtNQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSituacao)
                            .addComponent(btnBuscaSituacao)
                            .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataEntrada)
                    .addComponent(txtDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSair)
                            .addComponent(btnConsultar)
                            .addComponent(btnReservar)
                            .addComponent(btnLiberar))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDataSaida)
                            .addComponent(txtDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValorHospedagem)
                            .addComponent(txtValorHospedagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(95, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed
    
    //CRIADO obj formatter de forma global para ser usado em diferentes botoes 
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy"); //formato utilizado nas datas de Entrada e Saída
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao = new Conexao("system","oracle"); //usuario e senha
        conexao.setDriver("oracle.jdbc.driver.OracleDriver");
        conexao.setConnectionString("jdbc:oracle:thin:@127.0.0.1:1521:xe");
                                                     //CASA: 127.0.0.1
                                                    //FATEC: 192.168.56.1
        daoRegistro = new DaoRegistro(conexao.conectar());
        daoQuarto = new DaoQuarto(conexao.conectar());
        daoHospede = new DaoHospede(conexao.conectar());
        daoRecepcionista = new DaoRecepcionista(conexao.conectar());
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        conexao.fecharConexao();
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        registro = null;
        if(txtCodigo.getText().matches("[0-9]*")){ //valor digitado é inteiro
            registro = daoRegistro.consultar(Integer.parseInt(txtCodigo.getText()));
        
            if (registro == null){//não encontrou o objeto no BD
                txtCodigo.setEnabled(false);
                txtRegistroFuncional.setEnabled(true);
                txtRegistroFuncional.requestFocus();
                btnBuscaRegistroFuncional.setEnabled(true);
                txtBuscaRegistroFuncional.setEnabled(false);
                txtCPFHospede.setEnabled(false);
                btnBuscaCPFHospede.setEnabled(false);
                txtBuscaCPFHospede.setEnabled(false);
                txtNQuarto.setEnabled(false);
                btnBuscaSituacao.setEnabled(false);
                txtSituacao.setEnabled(false);
                txtDataEntrada.setEnabled(false);
                txtDataSaida.setEnabled(false);
                txtValorHospedagem.setEnabled(false);

                btnConsultar.setEnabled(false);
                btnReservar.setEnabled(true);
            }
            else{ //encontrou o objeto no BD
                txtRegistroFuncional.setText(String.valueOf(registro.getRecepcionista().getRegFunc()));
                txtBuscaRegistroFuncional.setText(String.valueOf(registro.getRecepcionista().getNome()));
                txtCPFHospede.setText(String.valueOf(registro.getHospede().getCpf()));
                txtBuscaCPFHospede.setText(String.valueOf(registro.getHospede().getNome()));
                txtNQuarto.setText(String.valueOf(registro.getQuarto().getNumero()));
                txtDataEntrada.setText(String.valueOf(registro.getDataEntrada().format(formatter)));
                quarto = daoQuarto.consultar(Integer.parseInt(txtNQuarto.getText()));
                if(quarto.getSituacao() == true){
                    txtSituacao.setText("Ocupado"); //ocupado = true = 1
                }else{
                    txtSituacao.setText("Liberado"); //liberado = false = 0
                }

            if (registro.getDataSaida() != null) { // verifica se há Data de Saida
                txtDataSaida.setText(String.valueOf(registro.getDataSaida().format(formatter)));
                txtValorHospedagem.setText(String.valueOf(registro.liberarQuarto()));

                txtDataSaida.setEnabled(false);
                txtValorHospedagem.setEnabled(false);
                btnLiberar.setEnabled(false);
                
            } else {
                // Se não há Data de Saida, mantenha os campos desabilitados
                txtDataSaida.setText("");
                txtValorHospedagem.setText("");
                txtDataSaida.setEnabled(false);
                txtValorHospedagem.setEnabled(false);
                btnLiberar.setEnabled(false);
            

                txtCodigo.setEnabled(false);
                btnConsultar.setEnabled(false);
                btnLiberar.setEnabled(true);
                txtDataSaida.setEnabled(true);
                txtDataSaida.requestFocus();
            }
        
            }
        }else{ //<> de inteiro
            JOptionPane.showMessageDialog(null, "Código inválido! Digite novamente.");
            txtCodigo.setText(null);
            txtCodigo.requestFocus();
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnBuscaRegistroFuncionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaRegistroFuncionalActionPerformed
        if(txtRegistroFuncional.getText().matches("[0-9]*")){//se valor digitado é inteiro
            recepcionista = daoRecepcionista.consultar(Integer.parseInt(txtRegistroFuncional.getText())); //Instanciando recepcionista
            
            if (recepcionista == null){//não encontrou o objeto na BD
                JOptionPane.showMessageDialog(null, "Recepcionista não cadastrado!");
                txtRegistroFuncional.setText(null);
                txtRegistroFuncional.requestFocus();
            }else{ //encontrou o objeto na BD
                btnBuscaRegistroFuncional.setEnabled(false);
                txtBuscaRegistroFuncional.setEnabled(false);
                txtBuscaRegistroFuncional.setText(recepcionista.getNome());
                txtRegistroFuncional.setEnabled(false); 
                txtCPFHospede.setEnabled(true);
                txtCPFHospede.requestFocus();
                btnConsultar.setEnabled(false);
                btnBuscaCPFHospede.setEnabled(true);
            }
        }else{
          JOptionPane.showMessageDialog(null, "Registro inválido! Digite novamente.");
          txtRegistroFuncional.setText(null);
          txtRegistroFuncional.requestFocus();
        }
    }//GEN-LAST:event_btnBuscaRegistroFuncionalActionPerformed

    private void btnBuscaCPFHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaCPFHospedeActionPerformed
       hospede = daoHospede.consultar(txtCPFHospede.getText());
        
       if (hospede == null){//não encontrou o objeto na BD
            JOptionPane.showMessageDialog(null, "Hospede não cadastrado!");
            txtCPFHospede.setText(null);
            txtCPFHospede.requestFocus();
        }
        else{ //encontrou o objeto na BD
           btnBuscaCPFHospede.setEnabled(false);
           txtBuscaCPFHospede.setEnabled(false); 
           txtCPFHospede.setEnabled(false);
           txtBuscaCPFHospede.setText(hospede.getNome());
           txtNQuarto.setEnabled(true);
           txtNQuarto.requestFocus();
           lblSituacao.setEnabled(true);
           btnBuscaSituacao.setEnabled(true);
           txtSituacao.setEnabled(true);
        }
    }//GEN-LAST:event_btnBuscaCPFHospedeActionPerformed

    private void btnBuscaSituacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaSituacaoActionPerformed
        if(txtNQuarto.getText().matches("[0-9]*")){
           
       quarto = daoQuarto.consultar(Integer.parseInt(txtNQuarto.getText()));
           
        if (quarto == null){//não encontrou o objeto na BD
            JOptionPane.showMessageDialog(null, "Quarto não cadastrado!");
            txtNQuarto.setText(null);
            txtNQuarto.requestFocus();
        }
        else{ //encontrou o objeto na BD
           
           if(quarto.getSituacao() == true){ //se o quarto estiver ocupado
               JOptionPane.showMessageDialog(null, "Quarto ocupado!");
               txtNQuarto.setText(null);
               txtNQuarto.requestFocus();
           }           
           else{ //se o quarto estiver false (livre)
               txtSituacao.setText("Liberado");
               txtNQuarto.setEnabled(false);
               lblSituacao.setEnabled(false);
               btnBuscaSituacao.setEnabled(false);
               txtSituacao.setEnabled(false);
               txtDataEntrada.setEnabled(true);
               btnReservar.setEnabled(true);
           }
        }
       }else{
          JOptionPane.showMessageDialog(null, "Número inválido! Digite novamente.");
          txtRegistroFuncional.setText(null);
          txtRegistroFuncional.requestFocus();
       }
    }//GEN-LAST:event_btnBuscaSituacaoActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        isValidDate(txtDataEntrada.getText());
        quarto.reservar();
            
        if (isValidDate(txtDataEntrada.getText())) {
            //Instanciando obj registro:
            registro = new Registro(Integer.parseInt(txtCodigo.getText()), LocalDate.parse(txtDataEntrada.getText(), formatter), recepcionista);
            registro.reservarQuarto(hospede, quarto); //ligacao entre registtro, quarto e hospede

            daoRegistro.reservar(registro);
            daoQuarto.alterar(quarto);

            txtCodigo.setText(null);
            txtCodigo.setEnabled(true);
            txtCodigo.requestFocus();
            txtRegistroFuncional.setText("");
            txtBuscaRegistroFuncional.setText("");
            txtCPFHospede.setText("");
            txtBuscaCPFHospede.setText("");
            txtNQuarto.setText("");
            txtSituacao.setText("");
            txtDataEntrada.setText("");
            txtDataEntrada.setEnabled(false);
            btnConsultar.setEnabled(true);
            btnReservar.setEnabled(false);

            JOptionPane.showMessageDialog(null, "Registro cadastrado!");
            
        } else {
            JOptionPane.showMessageDialog(null, "Data de entrada inválida. Digite novamente.");
            txtDataEntrada.setText("");
            txtDataEntrada.requestFocus();
        }
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        quarto = daoQuarto.consultar(Integer.parseInt(txtNQuarto.getText()));
        hospede = hospede = daoHospede.consultar(txtCPFHospede.getText());
        
        // Certifique-se de ter a data de saída definida antes de liberar
        if (txtDataSaida.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe a data de saída antes de liberar.");
            return;
        }

        try {
            // Atualiza a data de saída no objeto registro
            registro.setDataSaida(LocalDate.parse(txtDataSaida.getText(), formatter));
            quarto.setSituacao(false);//libera quarto
            registro.reservarQuarto(hospede, quarto);
            
            // Exibe o valor total da hospedagem no componente txtValorHospedagem
            txtValorHospedagem.setText(String.valueOf(registro.liberarQuarto()));
            daoQuarto.alterar(quarto);//atualiza a tabela quarto
            
             // Atualiza a tabela de registro com a data de saída e o valor
            daoRegistro.liberar(registro);

            // Outras ações que você desejar realizar após liberar o quarto
            txtDataSaida.setEnabled(false);
            btnLiberar.setEnabled(false);
            
        } catch (DateTimeParseException e){
            JOptionPane.showMessageDialog(null, "Formato de data inválido.");
        }
    }//GEN-LAST:event_btnLiberarActionPerformed

        public static boolean isValidDate(String dateString) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate date = LocalDate.parse(dateString, formatter);

            // Verifica se o dia, mês e ano estão dentro dos intervalos válidos
            int day = date.getDayOfMonth();
            int month = date.getMonthValue();
            int year = date.getYear();

            return (day >= 1 && day <= 31) &&
                   (month >= 1 && month <= 12) &&
                   (year >= 1000 && year <= 9999);
        } catch (DateTimeException e) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscaCPFHospede;
    private javax.swing.JButton btnBuscaRegistroFuncional;
    private javax.swing.JButton btnBuscaSituacao;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnReservar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel lblCPFHospede;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDataEntrada;
    private javax.swing.JLabel lblDataSaida;
    private javax.swing.JLabel lblNQuarto;
    private javax.swing.JLabel lblRegistroFuncional;
    private javax.swing.JLabel lblSituacao;
    private javax.swing.JLabel lblValorHospedagem;
    private javax.swing.JTextField txtBuscaCPFHospede;
    private javax.swing.JTextField txtBuscaRegistroFuncional;
    private javax.swing.JFormattedTextField txtCPFHospede;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtDataEntrada;
    private javax.swing.JFormattedTextField txtDataSaida;
    private javax.swing.JTextField txtNQuarto;
    private javax.swing.JTextField txtRegistroFuncional;
    private javax.swing.JTextField txtSituacao;
    private javax.swing.JTextField txtValorHospedagem;
    // End of variables declaration//GEN-END:variables
    private DaoRegistro daoRegistro=null;
    private Registro registro=null;
    private DaoRecepcionista daoRecepcionista=null;
    private Recepcionista recepcionista=null;
    private DaoQuarto daoQuarto=null;
    private Hospede hospede=null;
    private DaoHospede daoHospede=null;
    private Quarto quarto=null;
    private Conexao conexao=null;
}
